generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  name         String
  phone        String   @unique
  birthday     DateTime
  provider     Provider @default(LOCAL)
  createdAt    DateTime @default(now()) @map("created_at")
  password     String
  refreshToken String?  @map("refresh_token")
  updatedAt    DateTime @updatedAt @map("updated_at")
  albums       Album[]
  posts        Post[]

  @@map("users")
}

model Album {
  id        Int          @id @default(autoincrement())
  title     String
  userId    Int
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @updatedAt @map("updated_at")
  user      User         @relation(fields: [userId], references: [id])
  posts     PostAlbums[]

  @@map("albums")
}

model Post {
  id        Int          @id @default(autoincrement())
  title     String
  content   String
  location  String
  userId    Int
  createdAt DateTime     @default(now()) @map("created_at")
  isDeleted Boolean      @default(false) @map("is_deleted")
  updatedAt DateTime     @updatedAt @map("updated_at")
  images    Image[]
  albums    PostAlbums[]
  user      User         @relation(fields: [userId], references: [id])
  videos    Video[]

  @@map("posts")
}

model PostAlbums {
  postId  Int
  albumId Int
  album   Album @relation(fields: [albumId], references: [id])
  post    Post  @relation(fields: [postId], references: [id])

  @@id([postId, albumId])
  @@map("post_albums")
}

model Image {
  id           Int       @id @default(autoincrement())
  filename      String
  savedFilename     String    @map("saved_filename")
  extension    Extension
  size         Int
  path         String
  postId       Int
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  post         Post      @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@map("images")
}

model Video {
  id           Int       @id @default(autoincrement())
  filename      String
    savedFilename     String    @map("saved_filename")
  extension    Extension
  size         Int
  path         String
  duration     Int
  thumbnail    String?
  postId       Int
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  post         Post      @relation(fields: [postId], references: [id])

  @@map("videos")
}

enum Provider {
  LOCAL
  KAKAO
}

enum Extension {
  jpg
  jpeg
  png
  mp4
  webm
}
