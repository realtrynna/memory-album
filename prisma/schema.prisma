// This is your Prisma models file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "db-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  phone     String   @unique
  birthday  DateTime
  provider  Provider @default(LOCAL)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts  Post[]
  albums Album[]

  @@map("users")
}

enum Provider {
  LOCAL
  KAKAO
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  location  String
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User    @relation(fields: [userId], references: [id])
  userId Int
  images Image[]
  videos Video[]
  albums Album[]

  @@map("posts")
}

model Image {
  id           Int       @id @default(autoincrement())
  originalName String
  saveName     String
  extension    Extension
  size         Int
  path         String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  post    Post   @relation(fields: [postId], references: [id])
  postId  Int
  album   Album? @relation(fields: [albumId], references: [id])
  albumId Int?   @unique

  @@map("images")
}

enum Extension {
  jpg
  jpeg
  png
}

model Video {
  id           Int       @id @default(autoincrement())
  originalName String
  saveName     String
  extension    Extension
  size         Int
  path         String
  duration     Int
  thumbnail    String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  post   Post @relation(fields: [postId], references: [id])
  postId Int

  @@map("videos")
}

model Album {
  id        Int      @id @default(autoincrement())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId Int
  posts  Post[]
  image  Image?

  @@map("albums")
}
